package test20190220;
/*=================================================================
 ■■■ 실행 흐름의 컨드롤 (제어문) ■■■
 - 반복문 (for문) 실습
 - 다중 for문 (반복문의 중첩)을 활용한 구구단 출력 실습

 ※ 단일 반복문이 잘 구현되지 않기 때문에, 반복문 중첩에서 어렵다. 
 	상상해야 하는 부분이 많기 때문인데, 단일 반복문을 반복, 반복해서
	관찰, 실습하여 익숙해 져야 한다. 

==================================================================*/
/*
2 * 1 = 2	3 * 1 =  3    4 * 1 =  4   5 * 1 =  5     
2 * 2 = 4   3 * 2 =  6    4 * 2 =  8   5 * 2 = 10    
2 * 3 = 6   3 * 3 =  9    4 * 3 = 12   5 * 3 = 15    
2 * 4 = 8   3 * 4 = 12    4 * 4 = 16   5 * 4 = 20    
：				：	   	 	：			：			
2 * 9 = 18  3 * 9 = 27    4 * 9 = 36   5 * 9 = 45   

6 * 1 =  6	 7 * 1 =  7   8 * 1 =  8   9 * 1 =  9 
6 * 2 = 12   7 * 2 = 14   8 * 2 = 16   9 * 2 = 18    
6 * 3 = 18   7 * 3 = 21   8 * 3 = 24   9 * 3 = 27   
6 * 4 = 24   7 * 4 = 28   8 * 4 = 32   9 * 4 = 36   
：				：		 	：			：			
6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81  
*/
public class Test059
{
	public static void main(String[] args)
	{
		// 함께 풀이한 내용 
		
		// 관찰하여 변하는 값을 찾아 볼 것 
		// → 기술면접 시 실제 풀어야 하는 문제를 주는데, 시간 대비 문제 분석(구현해야할 기능)을 먼저 하는 습관
		
		// j, k 를 루프변수로 활용, 각 곱셈 연산 결과값 변수 g, 구구단의 '단'을 처리하는 변수 dan
		int dan;
		int i, j, k;
		int g;
		
		// 3) 문단구성(0~1) → ** 위와 아래를 컨트롤 할 수 있는 key for문
		for (i=0; i<2; i++)
		{
			// 1) 곱해지는 수(1~9) 한번에 처리 
			for (j=1; j<=9; j++)
			{	
			// 출력 확인
			// System.out.println("반복수행 " + j );
				
				// 2) 반복되는 단 구성 처리(2~9) → ** (2~5)
				for (k=2; k<=5; k++)
				{
					// 4) i가 0일 경우... k 2, 3, 4, 5 / i가 1일 경우 4+2= 6, 4+3= 7, 8, 9
					// ** dan = k * i  … 여러가지 경우를 대입한 결과로 ∴ dan = i * 4 * k 도출 
					dan = i * 4 + k;
					g = j * dan;
					System.out.printf("%4d * %d = %2d", dan, j, g);
				}
				// 2~9단까지 출력하고 웅숑숑숑 다 하고 웅하기 전에 개행하겠다.
				System.out.println();
			}
			System.out.println();
		}
		

		
		// 내가 풀이한 내용 

		// 문제 인식 및 분석
		// 삼중 for문을 이용해 구구단 출력
		// 12:30 분까지 해결하지 못하면 참고한다. 
		
		/*
		// ○ 주요 변수 선언 
		// 단수 i, 증가하는 수 j, 개행값 k 변수 선언 
		int i, j, k;
		
		// ○ 연산 및 처리 

		for (i=2; i<=5; i++)
		{
			// System.out.print(i);

				for (j=1; j<=9; j++)			
				{
					System.out.printf("%d * %d = %d",i, j, (i*j));
				}
		}


		/* 실패... 
		for (k=1; k<=9; k++)
		{
		// 단수 처리 2, 3, 4, 5, 6, 7, 8, 9
			for (i=2; i<=9; i++)
			{
				// i 값 출력 확인  
				// System.out.println(i);
				// 증가수 처리 1, 2, 3, 4, 5, 6, 7, 8, 9 
					for (j=1; j<=9; j++)
					{
						// j 값 출력 확인  
						// System.out.println(j);
						System.out.printf("%d * %d = %d\n",i, j, (i*j));

						
							System.out.println(k);		
					}
			}
		}
		*/
	}
}

// 실행 결과
/*
   2 * 1 =  2   3 * 1 =  3   4 * 1 =  4   5 * 1 =  5
   2 * 2 =  4   3 * 2 =  6   4 * 2 =  8   5 * 2 = 10
   2 * 3 =  6   3 * 3 =  9   4 * 3 = 12   5 * 3 = 15
   2 * 4 =  8   3 * 4 = 12   4 * 4 = 16   5 * 4 = 20
   2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   5 * 5 = 25
   2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   5 * 6 = 30
   2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   5 * 7 = 35
   2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   5 * 8 = 40
   2 * 9 = 18   3 * 9 = 27   4 * 9 = 36   5 * 9 = 45

   6 * 1 =  6   7 * 1 =  7   8 * 1 =  8   9 * 1 =  9
   6 * 2 = 12   7 * 2 = 14   8 * 2 = 16   9 * 2 = 18
   6 * 3 = 18   7 * 3 = 21   8 * 3 = 24   9 * 3 = 27
   6 * 4 = 24   7 * 4 = 28   8 * 4 = 32   9 * 4 = 36
   6 * 5 = 30   7 * 5 = 35   8 * 5 = 40   9 * 5 = 45
   6 * 6 = 36   7 * 6 = 42   8 * 6 = 48   9 * 6 = 54
   6 * 7 = 42   7 * 7 = 49   8 * 7 = 56   9 * 7 = 63
   6 * 8 = 48   7 * 8 = 56   8 * 8 = 64   9 * 8 = 72
   6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81

계속하려면 아무 키나 누르십시오 . . .

*/